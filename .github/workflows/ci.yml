name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint-and-format:
    name: 🔍 Lint & Format Check
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '24'
          cache: 'npm'

      - name: 📋 Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: 📚 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🔍 Run ESLint
        run: pnpm run lint

      - name: 🎨 Check code formatting
        run: pnpm run format:check

  test:
    name: 🧪 Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: product_sync_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/product_sync_test
      JWT_SECRET: test-jwt-secret-key
      CONTENTFUL_SPACE_ID: test-space-id
      CONTENTFUL_ACCESS_TOKEN: test-access-token

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '24'
          cache: 'npm'

      - name: 📋 Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: 📚 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🏗️ Build application
        run: pnpm run build

      - name: 🧪 Run unit tests
        run: pnpm run test

      - name: 🧪 Run e2e tests
        run: echo "E2E tests skipped - requires database setup"
        # TODO: Uncomment when database is properly configured for CI
        # run: pnpm run test:e2e

      - name: 📊 Upload coverage reports
        if: success()
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

  build:
    name: 🐳 Docker Build
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🏗️ Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: product-sync:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

  security:
    name: 🔒 Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '24'

      - name: 📋 Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: 📚 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🔒 Run security audit
        run: pnpm audit

      - name: 🔍 Run CodeQL analysis
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: 🔍 Perform CodeQL analysis
        uses: github/codeql-action/analyze@v3